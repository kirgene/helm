api:
  image:
    name: ghcr.io/modusbox/connection-manager-api
    version: 1.7.26
  ports:
    containerPort: 3001
    nodePort: 31057
  oauth:
    enabled: "FALSE"
    issuer: https://localhost/oauth2/token
    key: mysecretkey
    secret: changeme
    resetPassword:
      issuer: https://localhost/scim2/Users
      user: myuser
      pass: changeme
  url: https://localhost
  auth2fa:
    enabled: "FALSE"
  totp:
    admin:
      issuer: https://localhost/totp
      user: myuser
      password: changeme
    label: MCM
    issuer: MCM
  wso2:
    manager:
      service:
        url: https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap12Endpoint
        user: myuser
        pass: changeme
  extraTLS:
    certChain:
      enabled: 0
      stringValue: this_is_a_default
    rootCert:
      enabled: 0
      stringValue: this_is_a_default
  wso2TokenIssuer:
    cert:
      enabled: 0
      stringValue: this_is_a_default
    embeddedCertificate:
      enabled: 0
      stringValue: this_is_a_default
  vault:
    auth:
      k8s:
        enabled: true
        token: /var/run/secrets/kubernetes.io/serviceaccount/token
        mountPoint: kubernetes
        role: demo
      appRole:
        enabled: false
        roleId: /vault/role-id
        roleSecretId: /vault/role-secret-id
    endpoint: http://vault:8200
    mounts:
      pki: pki
      intermediatePki: pki_int
      kv: secrets
      dfspClientCertBundle: secret/onboarding_pm4mls
      dfspInternalIPWhitelistBundle: secret/whitelist_pm4mls
      dfspExternalIPWhitelistBundle: secret/whitelist_fsps
    pkiServerRole: server-role
    pkiClientRole: client-role
    signExpiryHours: 43800
  serviceAccount:
    externallyManaged: false
    serviceAccountNameOverride: null
  rbac:
    enabled: true
ui:
  image:
    name: ghcr.io/modusbox/connection-manager-ui
    version: 1.6.13
  ports:
    containerPort: 8080
    nodePort: 31627
  oauth:
    enabled: "FALSE"

db:
  user: mcm
  password: changeme
  host: localhost
  port: 3306
  schema: mcm

ingress:
  enabled: true
  host: localhost
  annotations: {}
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
# development friendly variables
imagePullPolicy: IfNotPresent

config:
  tlsClientCSRParametersData: |-
    {
      "subject": {
        "CN": "test_client_mcm",
        "E": "mcm@test.com",
        "O": "test",
        "OU": "test",
        "C": "US",
        "ST": "test",
        "L": "test"
      },
      "extensions": {
        "subjectAltName": {
          "dns": [
          ],
          "ips": [
          ]
        }
      }
    }
  tlsServerCSRParametersData: |-
    {
      "subject": {
        "CN": "test_client_mcm",
        "E": "mcm@test.com",
        "O": "test",
        "OU": "test",
        "C": "US",
        "ST": "test",
        "L": "test"
      },
      "extensions": {
        "subjectAltName": {
          "dns": [
          ],
          "ips": [
          ]
        }
      }
    }
  caCSRParametersData: |-
    {
      "CN": "CA",
      "E": "ca@test.com",
      "O": "test",
      "OU": "test",
      "C": "US",
      "ST": "test",
      "L": "test"
    }
